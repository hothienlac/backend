# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: history.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='history.proto',
  package='history',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=b'\n\rhistory.proto\x12\x07history\"\x10\n\x0eHistoryRequest\"8\n\x0eHistoryRespond\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0c\n\x04time\x18\x03 \x01(\t2M\n\x07History\x12\x42\n\ngetHistory\x12\x17.history.HistoryRequest\x1a\x17.history.HistoryRespond\"\x00\x30\x01\x62\x06proto3'
)




_HISTORYREQUEST = _descriptor.Descriptor(
  name='HistoryRequest',
  full_name='history.HistoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=26,
  serialized_end=42,
)


_HISTORYRESPOND = _descriptor.Descriptor(
  name='HistoryRespond',
  full_name='history.HistoryRespond',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='history.HistoryRespond.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='history.HistoryRespond.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='time', full_name='history.HistoryRespond.time', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=44,
  serialized_end=100,
)

DESCRIPTOR.message_types_by_name['HistoryRequest'] = _HISTORYREQUEST
DESCRIPTOR.message_types_by_name['HistoryRespond'] = _HISTORYRESPOND
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

HistoryRequest = _reflection.GeneratedProtocolMessageType('HistoryRequest', (_message.Message,), {
  'DESCRIPTOR' : _HISTORYREQUEST,
  '__module__' : 'history_pb2'
  # @@protoc_insertion_point(class_scope:history.HistoryRequest)
  })
_sym_db.RegisterMessage(HistoryRequest)

HistoryRespond = _reflection.GeneratedProtocolMessageType('HistoryRespond', (_message.Message,), {
  'DESCRIPTOR' : _HISTORYRESPOND,
  '__module__' : 'history_pb2'
  # @@protoc_insertion_point(class_scope:history.HistoryRespond)
  })
_sym_db.RegisterMessage(HistoryRespond)



_HISTORY = _descriptor.ServiceDescriptor(
  name='History',
  full_name='history.History',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=102,
  serialized_end=179,
  methods=[
  _descriptor.MethodDescriptor(
    name='getHistory',
    full_name='history.History.getHistory',
    index=0,
    containing_service=None,
    input_type=_HISTORYREQUEST,
    output_type=_HISTORYRESPOND,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_HISTORY)

DESCRIPTOR.services_by_name['History'] = _HISTORY

# @@protoc_insertion_point(module_scope)
